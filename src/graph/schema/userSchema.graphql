# Define base Query and Mutation types
type Query {
  users: UserQuery
}

type Mutation {
  users: UserMutation
}

# Define the UserQuery type
type UserQuery {
  list: [UserMinimal]
}

type UserMutation {
  create(
    email: String!
    name: String!
    passwordRaw: String
  ): Response<UserMinimal>
}

# Define the UserMinimal type
type UserMinimal {
  id: ID
  name: String
  email: String
  isSystem: Boolean
  isActive: Boolean
  createdAt: Date
  updatedAt: Date
}

# Define the UserResponse type
type Response<Schema> {
  success: Boolean!
  message: String
  data: Schema
}

# Define custom scalar Date
scalar Date
